<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.dto">

	<!-- AccountDTO -->
	<select id="selectAccount" resultType="AccountDTO">
		SELECT * FROM account
	</select>
    <insert id="insertAccount" parameterType="AccountDTO">
        INSERT INTO account (account_Id, account_Pw, account_Email, account_Name)
        VALUES (#{account_Id}, #{account_Pw}, #{account_Email}, #{account_Name})
    </insert>
	<update id="updateAccount" parameterType="AccountDTO">
		UPDATE account SET accountName = #{accountName}, balance = #{balance}
		WHERE accountId = #{accountId}
	</update>
	<delete id="deleteAccount" parameterType="String">
		DELETE FROM account WHERE accountId = #{accountId}
	</delete>

	<!-- BoardDetailDTO -->
	<select id="selectBoardDetail" resultType="BoardDetailDTO">
		SELECT * FROM boardDetail
	</select>
	<insert id="insertBoardDetail" parameterType="BoardDetailDTO">
		INSERT INTO boardDetail(boardId, detail)
		VALUES (#{boardId}, #{detail})
	</insert>
	<update id="updateBoardDetail" parameterType="BoardDetailDTO">
		UPDATE boardDetail SET detail = #{detail}
		WHERE boardId = #{boardId}
	</update>
	<delete id="deleteBoardDetail" parameterType="String">
		DELETE FROM boardDetail WHERE boardId = #{boardId}
	</delete>

	<!-- BoardDTO -->
	<select id="selectBoard" resultType="BoardDTO">
		SELECT * FROM board
	</select>
	<insert id="insertBoard" parameterType="BoardDTO">
		INSERT INTO board(boardId, boardName)
		VALUES (#{boardId}, #{boardName})
	</insert>
	<update id="updateBoard" parameterType="BoardDTO">
		UPDATE board SET boardName = #{boardName}
		WHERE boardId = #{boardId}
	</update>
	<delete id="deleteBoard" parameterType="String">
		DELETE FROM board WHERE boardId = #{boardId}
	</delete>

	<!-- BomAddDTO -->
	<select id="selectBomAdd" resultType="BomAddDTO">
		SELECT * FROM bomAdd
	</select>
	<insert id="insertBomAdd" parameterType="BomAddDTO">
		INSERT INTO bomAdd(bomId, itemId, quantity)
		VALUES (#{bomId}, #{itemId}, #{quantity})
	</insert>
	<update id="updateBomAdd" parameterType="BomAddDTO">
		UPDATE bomAdd SET itemId = #{itemId}, quantity = #{quantity}
		WHERE bomId = #{bomId}
	</update>
	<delete id="deleteBomAdd" parameterType="String">
		DELETE FROM bomAdd WHERE bomId = #{bomId}
	</delete>

	<!-- BOMDTO -->
	<select id="selectBOM" resultType="BOMDTO">
		SELECT * FROM bom
	</select>
	<insert id="insertBOM" parameterType="BOMDTO">
		INSERT INTO bom(bomId, bomName)
		VALUES (#{bomId}, #{bomName})
	</insert>
	<update id="updateBOM" parameterType="BOMDTO">
		UPDATE bom SET bomName = #{bomName}
		WHERE bomId = #{bomId}
	</update>
	<delete id="deleteBOM" parameterType="String">
		DELETE FROM bom WHERE bomId = #{bomId}
	</delete>

	<!-- ClientDTO -->
	<select id="selectClient" resultType="ClientDTO">
		SELECT * FROM client
	</select>
	<insert id="insertClient" parameterType="ClientDTO">
		INSERT INTO client(clientId, clientName, contact)
		VALUES (#{clientId}, #{clientName}, #{contact})
	</insert>
	<update id="updateClient" parameterType="ClientDTO">
		UPDATE client SET clientName = #{clientName}, contact = #{contact}
		WHERE clientId = #{clientId}
	</update>
	<delete id="deleteClient" parameterType="String">
		DELETE FROM client WHERE clientId = #{clientId}
	</delete>

	<!-- ErrorDTO -->
	<select id="selectError" resultType="ErrorDTO">
		SELECT * FROM error
	</select>
	<insert id="insertError" parameterType="ErrorDTO">
		INSERT INTO error(errorId, errorMessage)
		VALUES (#{errorId}, #{errorMessage})
	</insert>
	<update id="updateError" parameterType="ErrorDTO">
		UPDATE error SET errorMessage = #{errorMessage}
		WHERE errorId = #{errorId}
	</update>
	<delete id="deleteError" parameterType="String">
		DELETE FROM error WHERE errorId = #{errorId}
	</delete>

	<!-- FaultyDTO -->
	<select id="selectFaulty" resultType="FaultyDTO">
		SELECT * FROM faulty
	</select>
	<insert id="insertFaulty" parameterType="FaultyDTO">
		INSERT INTO faulty(faultyId, description)
		VALUES (#{faultyId}, #{description})
	</insert>
	<update id="updateFaulty" parameterType="FaultyDTO">
		UPDATE faulty SET description = #{description}
		WHERE faultyId = #{faultyId}
	</update>
	<delete id="deleteFaulty" parameterType="String">
		DELETE FROM faulty WHERE faultyId = #{faultyId}
	</delete>

	<!-- InventoryDTO -->
	<select id="selectInventory" resultType="InventoryDTO">
		SELECT * FROM inventory
	</select>
	<insert id="insertInventory" parameterType="InventoryDTO">
		INSERT INTO inventory(inventoryId, stockLevel)
		VALUES (#{inventoryId}, #{stockLevel})
	</insert>
	<update id="updateInventory" parameterType="InventoryDTO">
		UPDATE inventory SET stockLevel = #{stockLevel}
		WHERE inventoryId = #{inventoryId}
	</update>
	<delete id="deleteInventory" parameterType="String">
		DELETE FROM inventory WHERE inventoryId = #{inventoryId}
	</delete>

	<!-- ItemDTO -->
	<select id="selectItem" resultType="ItemDTO">
		SELECT * FROM item
	</select>
	<insert id="insertItem" parameterType="ItemDTO">
		INSERT INTO item(itemId, itemName, price)
		VALUES (#{itemId}, #{itemName}, #{price})
	</insert>
	<update id="updateItem" parameterType="ItemDTO">
		UPDATE item SET itemName = #{itemName}, price = #{price}
		WHERE itemId = #{itemId}
	</update>
	<delete id="deleteItem" parameterType="String">
		DELETE FROM item WHERE itemId = #{itemId}
	</delete>

	<!-- MaterialStockDTO -->
	<select id="selectMaterialStock" resultType="MaterialStockDTO">
		SELECT * FROM materialStock
	</select>
	<insert id="insertMaterialStock"
		parameterType="MaterialStockDTO">
		INSERT INTO materialStock(stockId, materialName, quantity)
		VALUES (#{stockId}, #{materialName}, #{quantity})
	</insert>
	<update id="updateMaterialStock"
		parameterType="MaterialStockDTO">
		UPDATE materialStock SET materialName = #{materialName}, quantity =
		#{quantity}
		WHERE stockId = #{stockId}
	</update>
	<delete id="deleteMaterialStock" parameterType="String">
		DELETE FROM materialStock WHERE stockId = #{stockId}
	</delete>

	<!-- MyPageDTO -->
	<select id="selectMyPage" resultType="MyPageDTO">
		SELECT * FROM myPage WHERE mypage_id = 'M001'
	</select>
	<insert id="insertMyPage" parameterType="MyPageDTO">
		INSERT INTO myPage(pageId, pageTitle)
		VALUES (#{pageId}, #{pageTitle})
	</insert>
	<update id="updateMyPage" parameterType="MyPageDTO">
		UPDATE myPage SET pageTitle = #{pageTitle}
		WHERE pageId = #{pageId}
	</update>
	<delete id="deleteMyPage" parameterType="String">
		DELETE FROM myPage WHERE pageId = #{pageId}
	</delete>

	<!-- OrderInfoDTO -->
	<select id="selectOrderInfo" resultType="OrderInfoDTO">
		SELECT * FROM orderInfo
	</select>
	<insert id="insertOrderInfo" parameterType="OrderInfoDTO">
		INSERT INTO orderInfo(orderId, productId, quantity)
		VALUES (#{orderId}, #{productId}, #{quantity})
	</insert>
	<update id="updateOrderInfo" parameterType="OrderInfoDTO">
		UPDATE orderInfo SET productId = #{productId}, quantity = #{quantity}
		WHERE orderId = #{orderId}
	</update>
	<delete id="deleteOrderInfo" parameterType="String">
		DELETE FROM orderInfo WHERE orderId = #{orderId}
	</delete>

	<!-- ProductionOrderDTO -->
	<select id="selectProductionOrder"
		resultType="ProductionOrderDTO">
		SELECT * FROM productionOrder
	</select>
	<insert id="insertProductionOrder"
		parameterType="ProductionOrderDTO">
		INSERT INTO productionOrder(orderId, productId, quantity)
		VALUES (#{orderId}, #{productId}, #{quantity})
	</insert>
	<update id="updateProductionOrder"
		parameterType="ProductionOrderDTO">
		UPDATE productionOrder SET productId = #{productId}, quantity = #{quantity}
		WHERE orderId = #{orderId}
	</update>
	<delete id="deleteProductionOrder" parameterType="String">
		DELETE FROM productionOrder WHERE orderId = #{orderId}
	</delete>

	<!-- ProductionPlanDTO -->
	<select id="selectProductionPlan" resultType="ProductionPlanDTO">
		SELECT * FROM productionPlan
	</select>
	<insert id="insertProductionPlan"
		parameterType="ProductionPlanDTO">
		INSERT INTO productionPlan(planId, productId, startDate)
		VALUES (#{planId}, #{productId}, #{startDate})
	</insert>
	<update id="updateProductionPlan"
		parameterType="ProductionPlanDTO">
		UPDATE productionPlan SET productId = #{productId}, startDate = #{startDate}
		WHERE planId = #{planId}
	</update>
	<delete id="deleteProductionPlan" parameterType="String">
		DELETE FROM productionPlan WHERE planId = #{planId}
	</delete>

	<!-- ProductionStatusDTO -->
	<select id="selectProductionStatus"
		resultType="ProductionStatusDTO">
		SELECT * FROM productionStatus
	</select>
	<insert id="insertProductionStatus"
		parameterType="ProductionStatusDTO">
		INSERT INTO productionStatus(statusId, statusDescription)
		VALUES (#{statusId}, #{statusDescription})
	</insert>
	<update id="updateProductionStatus"
		parameterType="ProductionStatusDTO">
		UPDATE productionStatus SET statusDescription = #{statusDescription}
		WHERE statusId = #{statusId}
	</update>
	<delete id="deleteProductionStatus" parameterType="String">
		DELETE FROM productionStatus WHERE statusId = #{statusId}
	</delete>

	<!-- RawMaterialStockDTO -->
	<select id="selectRawMaterialStock"
		resultType="RawMaterialStockDTO">
		SELECT * FROM rawMaterialStock
	</select>
	<insert id="insertRawMaterialStock"
		parameterType="RawMaterialStockDTO">
		INSERT INTO rawMaterialStock(stockId, materialName, quantity)
		VALUES (#{stockId}, #{materialName}, #{quantity})
	</insert>
	<update id="updateRawMaterialStock"
		parameterType="RawMaterialStockDTO">
		UPDATE rawMaterialStock SET materialName = #{materialName}, quantity =
		#{quantity}
		WHERE stockId = #{stockId}
	</update>
	<delete id="deleteRawMaterialStock" parameterType="String">
		DELETE FROM rawMaterialStock WHERE stockId = #{stockId}
	</delete>

	<!-- ShipmentDTO -->
	<select id="selectShipment" resultType="ShipmentDTO">
		SELECT * FROM shipment
	</select>
	<insert id="insertShipment" parameterType="ShipmentDTO">
		INSERT INTO shipment(shipmentId, shipmentDate, destination)
		VALUES (#{shipmentId}, #{shipmentDate}, #{destination})
	</insert>
	<update id="updateShipment" parameterType="ShipmentDTO">
		UPDATE shipment SET shipmentDate = #{shipmentDate}, destination =
		#{destination}
		WHERE shipmentId = #{shipmentId}
	</update>
	<delete id="deleteShipment" parameterType="String">
		DELETE FROM shipment WHERE shipmentId = #{shipmentId}
	</delete>

	<!-- StockDTO -->
	<select id="selectStock" resultType="StockDTO">
		SELECT * FROM stock
	</select>
	<!-- Read: 특정 재고 조회 -->
	<select id="selectStockById" parameterType="String"
		resultType="StockDTO">
		SELECT * FROM stock WHERE stock_name = #{stockName}
	</select>
	<!-- Create: 재고 추가 -->
	<insert id="insertStock" parameterType="StockDTO">
		INSERT INTO stock (stock_Id, item_Code, stock_Name, stock_Count,
		stock_Location, stock_Sort)
		VALUES (#{stockId}, #{itemCode}, #{stockName}, #{stockCount},
		#{stockLocation}, #{stockSort})
	</insert>
	<!-- Update: 재고 수정 -->
	<update id="updateStock" parameterType="StockDTO">
		UPDATE stock
		SET item_Code = #{itemCode},
		stock_Name = #{stockName},
		stock_Count = #{stockCount},
		stock_Location = #{stockLocation},
		stock_Sort = #{stockSort}
		WHERE stock_Id = #{stockId}
	</update>
	<!-- Delete: 재고 삭제 -->
	<delete id="deleteStock" parameterType="String">
		DELETE FROM stock WHERE stock_Id = #{stockId}
	</delete>

	<!-- TodoDTO -->
	<select id="selectTodo" resultType="TodoDTO">
		SELECT * FROM todo
	</select>
	<insert id="insertTodo" parameterType="TodoDTO">
		INSERT INTO todo(todoId, task, status)
		VALUES (#{todoId}, #{task}, #{status})
	</insert>
	<update id="updateTodo" parameterType="TodoDTO">
		UPDATE todo SET task = #{task}, status = #{status}
		WHERE todoId = #{todoId}
	</update>
	<delete id="deleteTodo" parameterType="String">
		DELETE FROM todo WHERE todoId = #{todoId}
	</delete>



	<!-- WorkDTO -->
	<select id="selectWork" resultType="WorkDTO">
		SELECT * FROM work
	</select>
	<insert id="insertWork" parameterType="WorkDTO">
		INSERT INTO work(workId, description, status)
		VALUES (#{workId}, #{description}, #{status})
	</insert>
	<update id="updateWork" parameterType="WorkDTO">
		UPDATE work
		SET description = #{description},
		status = #{status}
		WHERE workId = #{workId}
	</update>
	<delete id="deleteWork" parameterType="String">
		DELETE FROM work WHERE workId = #{workId}
	</delete>



</mapper>
